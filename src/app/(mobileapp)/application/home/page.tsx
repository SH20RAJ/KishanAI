'use client';

import React, { useState, useEffect } from 'react';
import { 
  Camera, 
  TrendingUp, 
  Cloud, 
  Award, 
  MessageCircle, 
  Leaf,
  Sun,
  CloudRain,
  Sprout,
  Bell,
  User,
  Menu,
  ArrowRight,
  Calendar,
  MapPin,
  IndianRupee
} from 'lucide-react';
import Link from 'next/link';

// Import mobile components
import {
  MobileHeader,
  QuickActionCard,
  WeatherCard,
  MarketPriceCard,
  CropDoctorCard,
  FarmManagementCard,
  AlertCard,
  GovernmentSchemeCard,
  BottomNavigation
} from '@/components/mobile';

// Mock data
const mockWeatherData = {
  temperature: 28,
  condition: 'sunny' as const,
  humidity: 65,
  windSpeed: 12,
  location: '‡§™‡•Å‡§£‡•á, ‡§Æ‡§π‡§æ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞',
  forecast: [
    { day: '‡§Ü‡§ú', temp: 28, condition: 'sunny' as const },
    { day: '‡§ï‡§≤', temp: 26, condition: 'cloudy' as const },
    { day: '‡§™‡§∞‡§∏‡•ã‡§Ç', temp: 24, condition: 'rainy' as const }
  ]
};

const mockMarketPrices = [
  { crop: '‡§ó‡•á‡§π‡•Ç‡§Ç', price: 2150, change: 5.2, unit: '‡§™‡•ç‡§∞‡§§‡§ø ‡§ï‡•ç‡§µ‡§ø‡§Ç‡§ü‡§≤' },
  { crop: '‡§ß‡§æ‡§®', price: 1980, change: -2.1, unit: '‡§™‡•ç‡§∞‡§§‡§ø ‡§ï‡•ç‡§µ‡§ø‡§Ç‡§ü‡§≤' },
  { crop: '‡§Æ‡§ï‡•ç‡§ï‡§æ', price: 1750, change: 3.8, unit: '‡§™‡•ç‡§∞‡§§‡§ø ‡§ï‡•ç‡§µ‡§ø‡§Ç‡§ü‡§≤' }
];

const mockAlerts = [
  {
    id: '1',
    type: 'warning' as const,
    title: '‡§Æ‡•å‡§∏‡§Æ ‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä',
    message: '‡§Ö‡§ó‡§≤‡•á 2 ‡§¶‡§ø‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§≠‡§æ‡§∞‡•Ä ‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•Ä ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ',
    timestamp: '2 ‡§ò‡§Ç‡§ü‡•á ‡§™‡§π‡§≤‡•á'
  },
  {
    id: '2',
    type: 'error' as const,
    title: '‡§´‡§∏‡§≤ ‡§∞‡•ã‡§ó ‡§Ö‡§≤‡§∞‡•ç‡§ü',
    message: '‡§Ü‡§™‡§ï‡•á ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Æ‡•á‡§Ç ‡§ü‡§Æ‡§æ‡§ü‡§∞ ‡§Æ‡•á‡§Ç ‡§ù‡•Å‡§≤‡§∏‡§æ ‡§∞‡•ã‡§ó ‡§´‡•à‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à',
    timestamp: '5 ‡§ò‡§Ç‡§ü‡•á ‡§™‡§π‡§≤‡•á'
  }
];

const mockFarms = [
  {
    id: '1',
    name: '‡§â‡§§‡•ç‡§§‡§∞‡•Ä ‡§ñ‡•á‡§§',
    area: 5,
    crop: '‡§ó‡•á‡§π‡•Ç‡§Ç',
    sowingDate: '15 ‡§®‡§µ‡§Ç',
    expectedHarvest: '15 ‡§Ö‡§™‡•ç‡§∞‡•à‡§≤',
    irrigationStatus: 'good' as const,
    healthScore: 85
  },
  {
    id: '2',
    name: '‡§¶‡§ï‡•ç‡§∑‡§ø‡§£‡•Ä ‡§ñ‡•á‡§§',
    area: 3,
    crop: '‡§ß‡§æ‡§®',
    sowingDate: '20 ‡§ú‡•Ç‡§®',
    expectedHarvest: '25 ‡§Ö‡§ï‡•ç‡§ü‡•Ç',
    irrigationStatus: 'needs-attention' as const,
    healthScore: 72
  }
];

export default function HomePage() {
  const [activeTab, setActiveTab] = useState('home');

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-yellow-50">
      {/* Header */}
      <MobileHeader 
        title="KisanAI"
        showBack={false}
        rightElement={
          <div className="flex items-center gap-2">
            <button className="p-2 rounded-full bg-white/80 backdrop-blur-sm shadow-sm">
              <Bell size={20} className="text-gray-600" />
            </button>
            <button className="p-2 rounded-full bg-white/80 backdrop-blur-sm shadow-sm">
              <User size={20} className="text-gray-600" />
            </button>
          </div>
        }
      />

      {/* Content */}
      <div className="px-4 pt-6 pb-24 space-y-6">
        {/* Welcome Section */}
        <div className="bg-gradient-to-r from-green-600 to-green-700 rounded-2xl p-6 text-white shadow-lg">
          <div className="flex items-center justify-between">
            <div>
              <h2 className="text-xl font-bold mb-1">‡§®‡§Æ‡§∏‡•ç‡§§‡•á, ‡§ï‡§ø‡§∏‡§æ‡§® ‡§ú‡•Ä! üåæ</h2>
              <p className="text-green-100 text-sm">‡§Ü‡§ú ‡§Ü‡§™‡§ï‡•Ä ‡§ñ‡•á‡§§‡•Ä ‡§ï‡•à‡§∏‡•Ä ‡§ö‡§≤ ‡§∞‡§π‡•Ä ‡§π‡•à?</p>
            </div>
            <div className="bg-white/20 rounded-full p-3">
              <Sprout size={32} className="text-white" />
            </div>
          </div>
        </div>

        {/* Quick Actions */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold text-gray-800">‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç</h3>
          <div className="grid grid-cols-2 gap-4">
            <Link href="/application/crop-scan">
              <QuickActionCard
                icon={Camera}
                title="‡§´‡§∏‡§≤ ‡§∏‡•ç‡§ï‡•à‡§®"
                subtitle="‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§®"
                color="bg-gradient-to-br from-blue-500 to-blue-600"
              />
            </Link>
            <Link href="/application/weather-forecast">
              <QuickActionCard
                icon={Cloud}
                title="‡§Æ‡•å‡§∏‡§Æ"
                subtitle="7 ‡§¶‡§ø‡§® ‡§ï‡§æ ‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§®‡•Å‡§Æ‡§æ‡§®"
                color="bg-gradient-to-br from-cyan-500 to-cyan-600"
              />
            </Link>
            <Link href="/application/market-prices">
              <QuickActionCard
                icon={TrendingUp}
                title="‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ"
                subtitle="‡§Ü‡§ú ‡§ï‡•á ‡§¶‡§æ‡§Æ"
                color="bg-gradient-to-br from-orange-500 to-orange-600"
              />
            </Link>
            <Link href="/application/schemes">
              <QuickActionCard
                icon={Award}
                title="‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç"
                subtitle="‡§®‡§à ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç"
                color="bg-gradient-to-br from-purple-500 to-purple-600"
              />
            </Link>
          </div>
        </div>

        {/* Weather Widget */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h3 className="text-lg font-semibold text-gray-800">‡§Ü‡§ú ‡§ï‡§æ ‡§Æ‡•å‡§∏‡§Æ</h3>
            <Link href="/application/weather-forecast" className="text-green-600 text-sm font-medium flex items-center gap-1">
              ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡•á ‡§¶‡•á‡§ñ‡•á‡§Ç <ArrowRight size={16} />
            </Link>
          </div>
          <WeatherCard weather={mockWeatherData} />
        </div>

        {/* Market Prices Preview */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h3 className="text-lg font-semibold text-gray-800">‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ</h3>
            <Link href="/application/market-prices" className="text-green-600 text-sm font-medium flex items-center gap-1">
              ‡§∏‡§≠‡•Ä ‡§¶‡•á‡§ñ‡•á‡§Ç <ArrowRight size={16} />
            </Link>
          </div>
          <div className="bg-white rounded-xl p-4 shadow-sm border border-gray-100">
            <div className="space-y-3">
              {mockMarketPrices.map((item, index) => (
                <div key={index} className="flex items-center justify-between py-2">
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center">
                      <Leaf size={20} className="text-green-600" />
                    </div>
                    <div>
                      <p className="font-medium text-gray-800">{item.crop}</p>
                      <p className="text-xs text-gray-500">{item.unit}</p>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="flex items-center gap-1">
                      <IndianRupee size={14} className="text-gray-600" />
                      <span className="font-semibold text-gray-800">{item.price}</span>
                    </div>
                    <div className={`text-xs flex items-center gap-1 ${
                      item.change > 0 ? 'text-green-600' : 'text-red-600'
                    }`}>
                      {item.change > 0 ? <TrendingUp size={12} /> : <TrendingUp size={12} className="rotate-180" />}
                      {Math.abs(item.change)}%
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Alerts */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold text-gray-800">‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∏‡•Ç‡§ö‡§®‡§æ‡§è‡§Ç</h3>
          <AlertCard alerts={mockAlerts} />
        </div>

        {/* Farm Management Quick Access */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold text-gray-800">‡§ñ‡•á‡§§ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®</h3>
          <FarmManagementCard farms={mockFarms} />
        </div>
      </div>

      {/* Bottom Navigation */}
      <BottomNavigation 
        activeTab={activeTab} 
        onTabChange={setActiveTab} 
      />
    </div>
  );
}